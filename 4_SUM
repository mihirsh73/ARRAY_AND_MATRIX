vector<vector<int>> fourSum(vector<int>& nums, int target) {
         
         sort(nums.begin(), nums.end());
    vector<vector<int>> res;
        if(nums.size()<4) return res;
    for (unsigned int i=0; i<nums.size()-3; i++) {
        int target3 = target-nums[i];
        
    for(int j=i+1; j<nums.size()-2; j++){
        int target2= target3-nums[j];
        
        int l = j+1, r = nums.size()-1;
        while (l<r) {
            int s = nums[l]+nums[r];
            if (s>target2) r--;
            else if (s<target2) l++;
            else {
                res.push_back(vector<int> {nums[i],nums[j], nums[l], nums[r]});           // TC O(N^3)
                while (l+1<nums.size() && nums[l]==nums[l+1]) l++;
                while (r-l> l && nums[r]==nums[r-1]) r--;
                l++; r--;
            }
        }
        while(j+1<nums.size()-2 && nums[j]==nums[j+1]) j++;
    }
        while(i+1<nums.size()-3 && nums[i]==nums[i+1]) i++;
    }
    return res;
