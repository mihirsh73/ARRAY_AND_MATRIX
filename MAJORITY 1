class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count=0;
        int candidate;
        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i]==candidate)
            {
                count++;
            }
            else if(count==0)                //N/2 TIMES;
            {
                candidate=nums[i];
                count++;
                
            }
           
            else{
                count--;
            }
        }
      
       
    return candidate;  
        
        
    }
};
/////////////////////////////////////////////  N/3 TIMES////////////////////////////////////////////////////////
class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int> res;
        if(nums.size()==0)
        {
            return res;
        }
        int candidate1,candidate2;
        int count1=0;
        int count2=0;
        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i]==candidate1)    /// first check for the candidate for avoiding collision of choosing the same candiadte1 and candidate2
           {
               count1++;
           }
            else if(nums[i]==candidate2)
            {
                count2++;
            }
            else if(count1==0)
            {
                candidate1=nums[i];
                count1++;
            }
            else if(count2==0)
            {
                candidate2=nums[i];
                count2++;
            }
          
            else{
                count1--;
                count2--;
            }
        }
        count1=0;
        count2=0;
        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i]==candidate1)
            {
                count1++;
            }
            else if(nums[i]==candidate2)
            {
                count2++;
            }
        }
        cout<<count1<<count2;
        if(count1>nums.size()/3)
        {
            res.push_back(candidate1);
        }
        if(count2>nums.size()/3)
        {
            res.push_back(candidate2);
        }
        return res;
    }
};
