    
    //Given an array nums[] of size n, construct a Product Array P (of same size n) such that P[i] is equal to the product of all the elements of nums except nums[i].
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
    vector<long long int > res(n);
      long long int leftproduct[n];
      long long int rightproduct[n];
      leftproduct[0]= 1;
      rightproduct[n-1]= 1;
      for(int i=1; i<n; i++)
      {
          leftproduct[i]= leftproduct[i-1]*nums[i-1];
      }
      for(int i=n-2; i>=0; i--)
      {
          rightproduct[i]= rightproduct[i+1]*nums[i+1];        TC O(N) SC O(N)
      }
      for(int i=0; i<n; i++)
      {
          res[i]=leftproduct[i]*rightproduct[i];
      }
      return res;
    }
};
